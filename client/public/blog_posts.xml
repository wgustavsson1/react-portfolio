<?xml version="1.0" encoding="UTF-8"?>
<posts>
    <post>
        <title type="text">HallÃ¥!</title>
        <author type="text">William Gustafsson</author>
        <date type="text">2023-02-19</date>
        <content type="html">
        <code>
import openai
import requests
import json
import os
from datetime import datetime

OPENAI_API_KEY = os.getenv('OPENAI_API_KEY')
BLOG_API_URL = os.getenv('BLOG_API_URL')

if not OPENAI_API_KEY or not BLOG_API_URL:
    raise ValueError("Missing required environment variables: OPENAI_API_KEY or BLOG_API_URL")

SEO_KEYWORDS = os.getenv('SEO_KEYWORDS', 'under construction,coming soon,blog updates,website launch').split(',')
DEFAULT_TITLE = os.getenv('DEFAULT_TITLE', 'Under Construction')

openai.api_key = OPENAI_API_KEY

def generate_blog_content(title, prompt):
    response = openai.Completion.create(
        engine="text-davinci-003",
        prompt=f"Write a blog post about '{title}'. {prompt}",
        max_tokens=1500,
        temperature=0.7,
        top_p=1.0
    )
    return response.choices[0].text.strip()

def seo_optimize(content):
    for keyword in SEO_KEYWORDS:
        if keyword.lower() not in content.lower():
            content += f"\n\n{keyword}: {keyword} is essential for keeping our visitors informed during this phase."
    return content

def format_blog_post(title, content):
    return {
        'title': title,
        'content': content,
        'date': datetime.now().strftime('%Y-%m-%d %H:%M:%S')
    }

def publish_blog_post(post_data):
    headers = {'Content-Type': 'application/json'}
    response = requests.post(BLOG_API_URL, headers=headers, data=json.dumps(post_data))
    if response.status_code != 201:
        raise Exception(f"Failed to publish blog post. Status code: {response.status_code}, Response: {response.text}")

def main():
    title = os.getenv('BLOG_TITLE', DEFAULT_TITLE)
    prompt = os.getenv('BLOG_PROMPT', "Explain that the blog is under construction and share exciting upcoming features.")
    
    content = generate_blog_content(title, prompt)
    optimized_content = seo_optimize(content)
    formatted_post = format_blog_post(title, optimized_content)
    publish_blog_post(formatted_post)

if __name__ == "__main__":
    main()


        </code>
         <h3>Blog Under Construction: Stay Tuned!</h3>
<p>
Hey there!
Iâ€™m currently giving my blog a makeover! ðŸš§ While things are under construction, I'm working on improving the design, adding new features, and prepping exciting content just for you.
I appreciate your patience, and canâ€™t wait to share the new and improved site with you soon.
Stay tuned!</p>
        </content>
    </post>
</posts>